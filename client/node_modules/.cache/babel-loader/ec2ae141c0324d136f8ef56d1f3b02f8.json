{"ast":null,"code":"var _jsxFileName = \"/Users/ry/Downloads/full-stack/client/src/components/Tasks.js\";\nimport React from 'react';\n\nconst Tasks = ({\n  task,\n  toggleOn,\n  description,\n  due,\n  tasks,\n  handleToggle,\n  message,\n  handleChange,\n  deleteById,\n  handleComplete,\n  handleSubmit,\n  handleFilter\n}) => {\n  // Sorts tasks by due date. Closer deadlines go to the top!\n  tasks.sort((task1, task2) => Date.parse(\"\".concat(task1.dueDate.year, \"-\").concat(task1.dueDate.month, \"-\").concat(task1.dueDate.day)) - Date.parse(\"\".concat(task2.dueDate.year, \"-\").concat(task2.dueDate.month, \"-\").concat(task2.dueDate.day)));\n  const taskFilters = ['None', 'Overdue', 'Completed', 'Due Today', 'Due Tomorrow'];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \" Submit a Task! \"), toggleOn ? React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"task\",\n    type: \"text\",\n    value: task,\n    placeholder: \"Task\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"description\",\n    type: \"textarea\",\n    value: description,\n    placeholder: \"Task description\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"due\",\n    type: \"date\",\n    value: due,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" Submit \")) : React.createElement(\"button\", {\n    onClick: handleToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \" Add Task \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" \", message ? message : '', \" \"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Filter By:\"), React.createElement(\"select\", {\n    onChange: handleFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, taskFilters.map((filter, key) => React.createElement(\"option\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, filter)))), React.createElement(\"span\", {\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Complete\")), React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, tasks.map((task, idx) => {\n    let indicator;\n\n    if (task.dueToday || task.dueTomorrow) {\n      indicator = 'soon';\n    } else if (task.isOverdue) {\n      indicator = 'overdue';\n    } else {\n      indicator = 'fine';\n    }\n\n    return React.createElement(\"li\", {\n      key: idx,\n      value: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: indicator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" Task: \", task.taskname, \" \"), React.createElement(\"input\", {\n      className: \"checkbox\",\n      type: \"checkbox\",\n      checked: task.completed,\n      onChange: handleComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" Description: \", task.taskDescription, \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" Due: \", \"\".concat(task.dueDate.month, \"/\").concat(task.dueDate.day, \"/\").concat(task.dueDate.year), \" \"), React.createElement(\"button\", {\n      onClick: deleteById,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Remove Task\"));\n  })));\n};\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/ry/Downloads/full-stack/client/src/components/Tasks.js"],"names":["React","Tasks","task","toggleOn","description","due","tasks","handleToggle","message","handleChange","deleteById","handleComplete","handleSubmit","handleFilter","sort","task1","task2","Date","parse","dueDate","year","month","day","taskFilters","map","filter","key","idx","indicator","dueToday","dueTomorrow","isOverdue","id","taskname","completed","taskDescription"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA,WAAjB;AAA8BC,EAAAA,GAA9B;AAAmCC,EAAAA,KAAnC;AAA0CC,EAAAA,YAA1C;AAAwDC,EAAAA,OAAxD;AAAiEC,EAAAA,YAAjE;AAA+EC,EAAAA,UAA/E;AAA2FC,EAAAA,cAA3F;AAA2GC,EAAAA,YAA3G;AAAyHC,EAAAA;AAAzH,CAAD,KAA4I;AACtJ;AACAP,EAAAA,KAAK,CAACQ,IAAN,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkBC,IAAI,CAACC,KAAL,WAAcH,KAAK,CAACI,OAAN,CAAcC,IAA5B,cAAoCL,KAAK,CAACI,OAAN,CAAcE,KAAlD,cAA2DN,KAAK,CAACI,OAAN,CAAcG,GAAzE,KAAkFL,IAAI,CAACC,KAAL,WAAcF,KAAK,CAACG,OAAN,CAAcC,IAA5B,cAAoCJ,KAAK,CAACG,OAAN,CAAcE,KAAlD,cAA2DL,KAAK,CAACG,OAAN,CAAcG,GAAzE,EAA/G;AACA,QAAMC,WAAW,GAAG,CAClB,MADkB,EAElB,SAFkB,EAGlB,WAHkB,EAIlB,WAJkB,EAKlB,cALkB,CAApB;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAGGpB,QAAQ,GACP;AAAM,IAAA,QAAQ,EAAES,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAEV,IAAtC;AAA4C,IAAA,WAAW,EAAC,MAAxD;AAA+D,IAAA,QAAQ,EAAEO,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,aAAZ;AAA0B,IAAA,IAAI,EAAC,UAA/B;AAA0C,IAAA,KAAK,EAAEL,WAAjD;AAA8D,IAAA,WAAW,EAAC,kBAA1E;AAA6F,IAAA,QAAQ,EAAEK,YAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAC,MAAvB;AAA8B,IAAA,KAAK,EAAEJ,GAArC;AAA0C,IAAA,QAAQ,EAAEI,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAQ,IAAA,OAAO,EAAEG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADO,GAQL;AAAQ,IAAA,OAAO,EAAEL,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXN,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMC,OAAO,GAAGA,OAAH,GAAa,EAA1B,MAdF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAkBE;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,IAAA,QAAQ,EAAEK,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,WAAW,CAACC,GAAZ,CAAgB,CAACC,MAAD,EAASC,GAAT,KAAiB;AAAQ,IAAA,GAAG,EAAEA,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBD,MAAnB,CAAjC,CADH,CAFF,CAlBF,EAyBE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAzBF,EA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,KAAK,CAACkB,GAAN,CAAU,CAACtB,IAAD,EAAOyB,GAAP,KAAe;AACxB,QAAIC,SAAJ;;AACA,QAAI1B,IAAI,CAAC2B,QAAL,IAAiB3B,IAAI,CAAC4B,WAA1B,EAAuC;AACrCF,MAAAA,SAAS,GAAG,MAAZ;AACD,KAFD,MAEO,IAAI1B,IAAI,CAAC6B,SAAT,EAAoB;AACzBH,MAAAA,SAAS,GAAG,SAAZ;AACD,KAFM,MAEA;AACLA,MAAAA,SAAS,GAAG,MAAZ;AACD;;AAED,WACA;AAAI,MAAA,GAAG,EAAED,GAAT;AAAc,MAAA,KAAK,EAAEzB,IAAI,CAAC8B,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAEJ,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiC1B,IAAI,CAAC+B,QAAtC,MADF,EAEE;AAAO,MAAA,SAAS,EAAC,UAAjB;AAA4B,MAAA,IAAI,EAAC,UAAjC;AAA4C,MAAA,OAAO,EAAE/B,IAAI,CAACgC,SAA1D;AAAqE,MAAA,QAAQ,EAAEvB,cAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkBT,IAAI,CAACiC,eAAvB,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAajC,IAAI,CAACiB,OAAL,CAAaE,KAA1B,cAAmCnB,IAAI,CAACiB,OAAL,CAAaG,GAAhD,cAAuDpB,IAAI,CAACiB,OAAL,CAAaC,IAApE,OAJF,EAKE;AAAQ,MAAA,OAAO,EAAEV,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,CADA;AAQA,GAlBD,CADH,CA7BF,CADF;AAqDH,CAhED;;AAkEA,eAAeT,KAAf","sourcesContent":["import React from 'react';\n\nconst Tasks = ({task, toggleOn, description, due, tasks, handleToggle, message, handleChange, deleteById, handleComplete, handleSubmit, handleFilter}) => {\n    // Sorts tasks by due date. Closer deadlines go to the top!\n    tasks.sort((task1, task2) => Date.parse(`${task1.dueDate.year}-${task1.dueDate.month}-${task1.dueDate.day}`) - Date.parse(`${task2.dueDate.year}-${task2.dueDate.month}-${task2.dueDate.day}`)); \n    const taskFilters = [\n      'None',\n      'Overdue',\n      'Completed',\n      'Due Today',\n      'Due Tomorrow',\n    ];\n\n    return (\n      <div>\n        <h1> Submit a Task! </h1>\n    \n        {toggleOn ? (\n          <form onSubmit={handleSubmit}>\n            <input name='task' type='text' value={task} placeholder='Task' onChange={handleChange} />\n            <input name='description' type='textarea' value={description} placeholder=\"Task description\" onChange={handleChange} />\n            <input name='due' type='date' value={due} onChange={handleChange} />\n            <button onClick={handleSubmit}> Submit </button>\n          </form>\n        ) : (\n            <button onClick={handleToggle}> Add Task </button>\n        )}\n        \n        <p> { message ? message : '' } </p>\n\n        <hr />\n\n        <span className='filter'>\n          <label>Filter By:</label>\n          <select onChange={handleFilter}>\n            {taskFilters.map((filter, key) => <option key={key}>{filter}</option>)}\n          </select>\n        </span>\n\n        <span className='checkbox'>\n          <label>Complete</label>\n        </span>\n\n        <ol>\n          {tasks.map((task, idx) => {\n            let indicator;\n            if (task.dueToday || task.dueTomorrow) {\n              indicator = 'soon';\n            } else if (task.isOverdue) {\n              indicator = 'overdue';\n            } else {\n              indicator = 'fine';\n            }\n\n            return (\n            <li key={idx} value={task.id}>\n              <p className={indicator}> Task: {task.taskname} </p>\n              <input className='checkbox' type='checkbox' checked={task.completed} onChange={handleComplete} />\n              <p> Description: {task.taskDescription} </p>\n              <p> Due: {`${task.dueDate.month}/${task.dueDate.day}/${task.dueDate.year}`} </p>\n              <button onClick={deleteById}>Remove Task</button>\n            </li>\n          )})}\n        </ol>\n      </div>\n    );\n}\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}